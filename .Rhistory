df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(Country = factor(
ifelse(runif(20) > 0.75, "US", "Mexico"),
c("US", "Mexico")
))
)
pal <- colorFactor(c("navy", "darkgreen"), domain = c("US", "Mexico"))
library(leaflet)
pal <- colorFactor(c("navy", "darkgreen"), domain = c("US", "Mexico"))
leaflet(df) %>% addTiles() %>%
addCircleMarkers(
radius = ~ifelse(Country == "ship", 6, 10),
color = ~pal(Country),
stroke = TRUE, fillOpacity = 0.5
) %>%
addLegend(pal=pal, values = Country)
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(Country = factor(
ifelse(runif(20) > 0.75, "US", "Mexico"),
c("US", "Mexico")
))
)
leaflet(df) %>% addTiles() %>%
addCircleMarkers(
radius = ~ifelse(Country == "ship", 6, 10),
color = ~pal(Country),
stroke = TRUE, fillOpacity = 0.5
) %>%
addLegend(pal=pal, values = Country)
(
leaflet(df) %>% addTiles() %>%
addCircleMarkers(
radius = ~ifelse(Country == "ship", 6, 10),
color = ~pal(Country),
stroke = TRUE, fillOpacity = 0.5
) %>%
addLegend(pal=pal, values = ~Country)
leaflet(df) %>% addTiles() %>%
addCircleMarkers(
radius = ~ifelse(Country == "ship", 6, 10),
color = ~pal(Country),
stroke = TRUE, fillOpacity = 0.5
) %>%
addLegend(pal=pal, values = ~Country)
leaflet(df) %>% addTiles() %>%
addCircleMarkers(
radius = ~ifelse(Country == "ship", 6, 10),
color = ~pal(Country),
stroke = TRUE, fillOpacity = 0.5
) %>%
addLegend(pal=pal, values = ~Country)
library("rgdal")
library("tools")
library("dplyr")
library("ggplot2")
library("sp")
library(knitr)
path.ne.coast <- ("Data/ne_10m_coastline")
data_coast <- readOGR(dsn = path.ne.coast,
layer = file_path_sans_ext(file_name))
path.ne.coast <- ("./Data/ne_10m_coastline")
file_name <- "ne_10m_coastline.shp"
data_coast <- readOGR(dsn = path.ne.coast,
layer = file_path_sans_ext(file_name))
class(data_coast)
quick.subset <- function(x, domain){
x@data$id <- rownames(x@data)
x.f = fortify(x, region = "id")
x.join <- inner_join(x.f, x@data, by = "id")
x.subset <- subset(x.join, x.join$long > domain[1] &
x.join$long < domain[2] &
x.join$lat > domain[3] &
x.join$lat < domain[4])
x.subset
}
P_Lat_N  <- 73     #Pacific_Latitude_North
P_Lat_S  <- 30     #Pacific_Latitude_South
P_Long_W <- -179.5 #Pacific_Longitude_West
P_Long_E <- -120.5 #Pacific_Longitude_East
domain <- c(P_Long_W, P_Long_E, P_Lat_S, P_Lat_N)
data_coast.wc <- quick.subset(data_coast, #Orginal shapefile
domain #Limits
) # 4132x8
kable(head(data_coast.wc,5),
caption = "Table 1. First 5 rows of the Subsetted Data") #Kable is just a fancy way to show data frames ;)
xlims <- c(-185, -116)
ylims <- c(32, 73)
Map_Base <- ggplot() +
geom_path(data = data_coast.wc,
aes(x = long, y = lat, group = group),
color = "black",
size = 0.25) +
coord_map(projection = "mercator") + #Try plotting the map without this!
scale_x_continuous(limits = xlims,
expand = c(0, 0)) +
scale_y_continuous(limits = ylims,
expand = c(0, 0)) +
labs(list(title = "Pacific North West Map",
x = "Longitude",
y = "Latitude")) +
theme_classic() #I'm OCD and don't like lines and background on my plots
Map_Base
path_eez_world <- "./Data/World_EEZ_v8_2014_LR"
fnam_eez_world <- "World_EEZ_v8_2014.shp"
eez_world <- readOGR(dsn   = path_eez_world,
layer = file_path_sans_ext(fnam_eez_world))
class(eez_world)
class(data_coast.wc)
class(data_coast.wc)
class(data_coast)
fortify.shape <- function(x){
x@data$id <- rownames(x@data)
x.f = fortify(x, region = "id")
x.join <- inner_join(x.f, x@data, by = "id")
}
str(eez_world)
class(eez_world@data)
head(eez_world@data)
eez_Alaska <- eez_world[eez_world@data$Country == "Alaska", ]
eez_Alaska <- fortify(eez_Alaska)
Map_EEZ_Alaska <- Map_Base +
geom_path(data = filter(eez_Alaska, piece == 1), #Piece 1 referes to the pacific side
aes(x = long, y = lat, group = group),
colour = "purple", size = 0.75) +
ggtitle("Alaska EEZ")
Map_EEZ_Alaska
eez_Can <- eez_world[eez_world@data$Country == "Canada", ]
eez_Can <- fortify(eez_Can)
Map_eez_Can <- Map_EEZ_Alaska + geom_path(data = filter(eez_Can, piece == 4), #Turns out that piece 4 is British Columbia, who knew!?
aes(x = long, y = lat, group = group),
colour = "red", size = 0.75) +
ggtitle("Alaska and Canada's EEZ")
Map_eez_Can
eez_usa <- eez_world[eez_world@data$Country == "United States", ]
# Fortify the shapefile data:
eez_usa <- fortify(eez_usa)
Map_eez_US <-
Map_eez_Can +
geom_path(data = filter(eez_usa, piece == 2),
aes(x = long, y = lat, group = group),
colour = "blue", size = 0.75) +
ggtitle("Alaska, Canada and US EEZ")
Map_eez_US
Map_eez_US +
annotate("text",
x      = -150,
y      = 65,
colour = "purple",
label  = "Alaska") +
annotate("text",
x      = -150,
y      = 48,
colour = "red",
label  = "Canada EEZ ---> ") +
annotate("text",
x      = -145,
y      = 41,
colour = "blue",
label  = "USA EEZ --->") +
ggtitle("Pacific North West With EEZs")
Map_eez_US <-
Map_eez_Can +
geom_polygon(data = filter(eez_usa, piece == 2),
aes(x = long, y = lat, group = group),
colour = "blue", size = 0.75) +
ggtitle("Alaska, Canada and US EEZ")
Map_eez_US
Map_eez_US <-
Map_eez_Can +
geom_path(data = filter(eez_usa, piece == 2),
aes(x = long, y = lat, group = group),
colour = "blue", size = 0.75) +
ggtitle("Alaska, Canada and US EEZ")
Map_eez_US
library(leaflet)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -90, lat = 1.3, zoom = 2) %>%
addMarkers(
lng = -90,
lat= 1.4,
popup = "Hola!"
)
library(data.table)
p1 <- fread("./Data/GPS/GPS/seal_05_Locations_Filtered.csv")
p2 <- fread("./Data/GPS/GPS/seal_17_Locations_Filtered.csv")
p3 <- fread("./Data/GPS/GPS/seal_20_Locations_Filtered.csv")
p1
p1 <- fread("./Data/GPS/GPS/seal_05_Locations_Filtered.csv", drop = c("DateTime"))
p2 <- fread("./Data/GPS/GPS/seal_17_Locations_Filtered.csv",drop = c("DateTime"))
p3 <- fread("./Data/GPS/GPS/seal_20_Locations_Filtered.csv", drop = c("DateTime"))
p1
p <- rbind(p1, p2, p3)
p
p[ , sealID := as.numeric(sealID)]
p
fwrite(p, file = "Harbour_seal_GPS.csv")
p1 <- fread("./Data/harbour_seal_GPS.csv")
p1
p1 <- read.csv("./Data/harbour_seal_GPS.csv")
head(p1)
data <- read.csv("./Data/harbour_seal_GPS.csv")
library(leaflet)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addMarkers(
lng = -90,
lat= 1.4,
popup = "Hola!"
)
head(data)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color = ~pal(sealID),
fillOpacity = 0.5,
popup = "Hola!"
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color = ~sealID,
fillOpacity = 0.5,
popup = "Hola!"
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~sealID,
size        = 10,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = "Hola!"
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~sealID,
radius      = 10,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = "Hola!"
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~sealID,
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = "Hola!"
)
pal  <- colorFactor(c("navy", "red", "green"), domain = c("5", "17", "20"))
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = "Hola!"
)
library(htmltools)
library(leaflet)
library(htmltools)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
pal  <- colorFactor(c("navy", "red", "darkgreen"), domain = c("5", "17", "20"))
library(leaflet)
library(htmltools)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
data
head(data)
pal  <- colorFactor(c("navy", "red", "darkgreen"), domain = unique(data$sealID))
library(leaflet)
library(htmltools)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
# setView(lng = -90, lat = 1.3, zoom = 2) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -124.027526, lat = 49.371036, zoom = 2) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -124.027526, lat = 49.371036, zoom = 10) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -124.027526, lat = 49.371036, zoom = 9) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -124.027526, lat = 49.371036, zoom = 8) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
library(leaflet)
library(htmltools)
leaflet(data) %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -124.027526, lat = 49.371036, zoom = 7) %>%
addCircleMarkers(
color       = ~pal(sealID),
radius      = 5,
fillOpacity = 0.5,
stroke      = FALSE,
popup       = ~htmlEscape(paste0("seal # ", sealID))
)
library(ggmap)
myLocation <- c(min(data$Longitude) - 0.1,
min(data$Latitude)  - 0.1,
max(data$Longitude) + 0.1,
max(data$Latitude)  + 0.1)
myMap <- get_map(myLocation,
source   = "stamen",
maptype  = "toner",
crop     = TRUE)
myPlot <- ggmap(myMap, extent = "panel", maprange = FALSE) +
geom_point(data = dt, aes(x = Longitude, y = Latitude, colour = factor(sealID)), alpha = 0.5) +
theme(legend.position = "none", text = element_text(size = 12)) +
ylab("Latitude") +
xlab("Longitude")
install.packages(ggplot)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggproto")
# Loading the data: GPS locations of 3 harbour seals in the Strait of Georgia.
data <- read.csv("./Data/harbour_seal_GPS.csv")
library(ggmap)
myLocation <- c(min(data$Longitude) - 0.1,
min(data$Latitude)  - 0.1,
max(data$Longitude) + 0.1,
max(data$Latitude)  + 0.1)
myMap <- get_map(myLocation,
source   = "stamen",
maptype  = "toner",
crop     = TRUE)
myPlot <- ggmap(myMap, extent = "panel", maprange = FALSE) +
geom_point(data = dt, aes(x = Longitude, y = Latitude, colour = factor(sealID)), alpha = 0.5) +
theme(legend.position = "none", text = element_text(size = 12)) +
ylab("Latitude") +
xlab("Longitude")
?GeomRasterAnn
install.packages("ggmap")
# Loading the data: GPS locations of 3 harbour seals in the Strait of Georgia.
data <- read.csv("./Data/harbour_seal_GPS.csv")
library(ggmap)
myLocation <- c(min(data$Longitude) - 0.1,
min(data$Latitude)  - 0.1,
max(data$Longitude) + 0.1,
max(data$Latitude)  + 0.1)
myMap <- get_map(myLocation,
source   = "stamen",
maptype  = "toner",
crop     = TRUE)
myPlot <- ggmap(myMap, extent = "panel", maprange = FALSE) +
geom_point(data = dt, aes(x = Longitude, y = Latitude, colour = factor(sealID)), alpha = 0.5) +
theme(legend.position = "none", text = element_text(size = 12)) +
ylab("Latitude") +
xlab("Longitude")
myPlot
myPlot <- ggmap(myMap, extent = "panel", maprange = FALSE) +
geom_point(data = data, aes(x = Longitude, y = Latitude, colour = factor(sealID)), alpha = 0.5) +
theme(legend.position = "none", text = element_text(size = 12)) +
ylab("Latitude") +
xlab("Longitude")
myPlot
library(ggsn)
install.packages("ggsn")
library(ggmap)
library(ggsn)
install.packages('ggsn')̀
install.packages('ggsn')
install_github('oswaldosantos/ggsn')
devtools::install_github('oswaldosantos/ggsn')
library(ggmap)
myLocation <- c(min(data$Longitude) - 0.1,
min(data$Latitude)  - 0.1,
max(data$Longitude) + 0.1,
max(data$Latitude)  + 0.1)
myMap <- get_map(myLocation,
source   = "stamen",
maptype  = "toner",
crop     = TRUE)
myPlot <- ggmap(myMap, extent = "panel", maprange = FALSE) +
geom_point(data = data, aes(x = Longitude, y = Latitude, colour = factor(sealID)), alpha = 0.5) +
theme(legend.position = "none", text = element_text(size = 12)) +
ylab("Latitude") +
xlab("Longitude")
myPlot
